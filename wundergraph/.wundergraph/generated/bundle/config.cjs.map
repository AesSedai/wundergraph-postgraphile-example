{
  "version": 3,
  "sources": ["../../wundergraph.config.ts", "../../wundergraph.server.ts", "../../wundergraph.operations.ts"],
  "sourcesContent": ["import { configureWunderGraphApplication, cors, EnvironmentVariable, introspect, templates } from '@wundergraph/sdk';\nimport server from './wundergraph.server';\nimport operations from './wundergraph.operations';\n\nconst countries = introspect.graphql({\n\tapiNamespace: 'countries',\n\turl: 'https://countries.trevorblades.com/',\n});\n\nconst postgraphile = introspect.graphql({\n\tapiNamespace: 'pg',\n\turl: 'http://localhost:5000/graphql',\n    introspection: {\n        pollingIntervalSeconds: 30\n    }\n});\n\n// configureWunderGraph emits the configuration\nconfigureWunderGraphApplication({\n\tapis: [countries, postgraphile],\n\tserver,\n\toperations,\n\tgenerate: {\n\t\tcodeGenerators: [],\n\t},\n\tcors: {\n\t\t...cors.allowAll,\n\t\tallowedOrigins:\n\t\t\tprocess.env.NODE_ENV === 'production'\n\t\t\t\t? [\n\t\t\t\t\t\t// change this before deploying to production to the actual domain where you're deploying your app\n\t\t\t\t\t\t'http://localhost:3000',\n\t\t\t\t  ]\n\t\t\t\t: ['http://localhost:3000', new EnvironmentVariable('WG_ALLOWED_ORIGIN')],\n\t},\n\tsecurity: {\n\t\tenableGraphQLEndpoint: process.env.NODE_ENV !== 'production' || process.env.GITPOD_WORKSPACE_ID !== undefined,\n\t},\n});\n", "import { configureWunderGraphServer } from '@wundergraph/sdk/server';\n\nexport default configureWunderGraphServer(() => ({\n\thooks: {\n\t\tqueries: {\n\t\t\tCountries: {\n\t\t\t\tpreResolve: async ({ operations }) => {},\n\t\t\t},\n\t\t},\n\t\tmutations: {},\n\t},\n}));\n", "import { configureWunderGraphOperations } from '@wundergraph/sdk';\nimport type { OperationsConfiguration } from './generated/wundergraph.operations';\n\nexport default configureWunderGraphOperations<OperationsConfiguration>({\n\toperations: {\n\t\tdefaultConfig: {\n\t\t\tauthentication: {\n\t\t\t\trequired: false,\n\t\t\t},\n\t\t},\n\t\tqueries: (config) => ({\n\t\t\t...config,\n\t\t\tcaching: {\n\t\t\t\tenable: false,\n\t\t\t\tstaleWhileRevalidate: 60,\n\t\t\t\tmaxAge: 60,\n\t\t\t\tpublic: true,\n\t\t\t},\n\t\t\tliveQuery: {\n\t\t\t\tenable: true,\n\t\t\t\tpollingIntervalSeconds: 1,\n\t\t\t},\n\t\t}),\n\t\tmutations: (config) => ({\n\t\t\t...config,\n\t\t}),\n\t\tsubscriptions: (config) => ({\n\t\t\t...config,\n\t\t}),\n\t\tcustom: {},\n\t},\n});\n"],
  "mappings": "aAAA,IAAAA,EAAkG,4BCAlG,IAAAC,EAA2C,mCAEpCC,KAAQ,8BAA2B,KAAO,CAChD,MAAO,CACN,QAAS,CACR,UAAW,CACV,WAAY,MAAO,CAAE,WAAAC,CAAW,IAAM,CAAC,CACxC,CACD,EACA,UAAW,CAAC,CACb,CACD,EAAE,ECXF,IAAAC,EAA+C,4BAGxCC,KAAQ,kCAAwD,CACtE,WAAY,CACX,cAAe,CACd,eAAgB,CACf,SAAU,EACX,CACD,EACA,QAAUC,IAAY,CACrB,GAAGA,EACH,QAAS,CACR,OAAQ,GACR,qBAAsB,GACtB,OAAQ,GACR,OAAQ,EACT,EACA,UAAW,CACV,OAAQ,GACR,uBAAwB,CACzB,CACD,GACA,UAAYA,IAAY,CACvB,GAAGA,CACJ,GACA,cAAgBA,IAAY,CAC3B,GAAGA,CACJ,GACA,OAAQ,CAAC,CACV,CACD,CAAC,EF3BD,IAAMC,EAAY,aAAW,QAAQ,CACpC,aAAc,YACd,IAAK,qCACN,CAAC,EAEKC,EAAe,aAAW,QAAQ,CACvC,aAAc,KACd,IAAK,gCACF,cAAe,CACX,uBAAwB,EAC5B,CACJ,CAAC,KAGD,mCAAgC,CAC/B,KAAM,CAACD,EAAWC,CAAY,EAC9B,OAAAC,EACA,WAAAC,EACA,SAAU,CACT,eAAgB,CAAC,CAClB,EACA,KAAM,CACL,GAAG,OAAK,SACR,eACC,QAAQ,IAAI,WAAa,aACtB,CAEA,uBACA,EACA,CAAC,wBAAyB,IAAI,sBAAoB,mBAAmB,CAAC,CAC3E,EACA,SAAU,CACT,sBAAuB,QAAQ,IAAI,WAAa,cAAgB,QAAQ,IAAI,sBAAwB,MACrG,CACD,CAAC",
  "names": ["import_sdk", "import_server", "wundergraph_server_default", "operations", "import_sdk", "wundergraph_operations_default", "config", "countries", "postgraphile", "wundergraph_server_default", "wundergraph_operations_default"]
}
